@model YarnsAndMobileRCOnlineBookStore.Controllers.PaginatedList<YarnsAndMobileRCOnlineBookStore.Models.Review>
@using Microsoft.AspNetCore.Identity
@using YarnsAndMobileRCOnlineBookStore.Models.Data
@inject SignInManager<Member> SignInManager
@inject UserManager<Member> UserManager

@{
    ViewData["Title"] = "Review Index";
}

<p></p>
<h1>Review Index</h1>

<form asp-action="Index" method="get">
    <div class="form-actions no-color">
        <p>
            <em>Find by Date or Email: </em>
            <input type="text" class="w-50" name="SearchString" value="@ViewData["CurrentFilter"]" />
            <input type="submit" value="Search" />
            <a asp-action="Index">Back to Full List</a>
        </p>
    </div>
</form>

<div>
    @foreach (var item in Model)
    {
        <ul>
            <li class="list-unstyled ">
                <div class="d-inline-flex">
                    <div>
                        <img width="200" height="200" src="@item.Books.Image">
                    </div>
                    <div class="ml-4">
                        <p class="text-danger h3">@Html.DisplayFor(modelItem => item.Books.Title)</p>
                        <p class="h5 text-primary">Review Rating: @Html.DisplayFor(modelItem => item.StarRating) <strong class="text-dark">@Html.DisplayFor(modelItem => item.Title)</strong></p>
                        <h6 class="text-justify"><em>@Html.DisplayFor(modelItem => item.Text)</em></h6>
                        <h6>@Html.DisplayFor(modelItem => item.ReviewDate.Value.Date)</h6>
                        <h6 class="text-primary">By @Html.DisplayFor(modelItem => item.Members.Email)</h6>
                        <a  asp-action="Edit" asp-route-id="@item.ReviewId">Edit |</a>
                        <a  asp-action="Delete" asp-route-id="@item.ReviewId">Delete</a>
                    </div>

                </div>
            </li>
        </ul>

    }
</div>

@{
    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";
}

<div>
    <ul class="pagination">
        <li class="page-item @prevDisabled">
            <a asp-action="Index"
               asp-route-sortOrder="@ViewData["CurrentSort"]"
               asp-route-pageNumber="1"
               asp-route-currentFilter="@ViewData["CurrentFilter"]"
               class="page-link ">
                First
            </a>
        </li>
        <li class="page-item @prevDisabled">
            <a asp-action="Index"
               asp-route-sortOrder="@ViewData["CurrentSort"]"
               asp-route-pageNumber="@(Model.PageIndex - 1)"
               asp-route-currentFilter="@ViewData["CurrentFilter"]"
               class="page-link ">
                Previous
            </a>
        </li>
        @if (Model.TotalPages > 0)
        {
            int pageNum;
            int pageLimit = 10;
            if (Model.TotalPages > pageLimit)
                pageLimit = 10;
            else
                pageLimit = Model.TotalPages;

            @for (int i = 0; i < pageLimit; i++)
            {
                pageNum = Model.PageIndex + i;
                var currentIndex = Model.PageIndex == pageNum ? "active" : "";
                if (pageNum <= Model.TotalPages)
                {
                    <li class="page-item @(currentIndex)">
                        <a asp-action="Index"
                           asp-route-sortOrder="@ViewData["CurrentSort"]"
                           asp-route-pageNumber="@(pageNum)"
                           asp-route-currentFilter="@ViewData["CurrentFilter"]"
                           class="page-link">@(pageNum)</a>
                    </li>
                }
            }
        }
        <li class="page-item @nextDisabled">
            <a asp-action="Index"
               asp-route-sortOrder="@ViewData["CurrentSort"]"
               asp-route-pageNumber="@(Model.PageIndex + 1)"
               asp-route-currentFilter="@ViewData["CurrentFilter"]"
               class="page-link ">
                Next
            </a>
        </li>
        <li class="page-item @nextDisabled">
            <a asp-action="Index"
               asp-route-sortOrder="@ViewData["CurrentSort"]"
               asp-route-pageNumber="@(Model.TotalPages)"
               asp-route-currentFilter="@ViewData["CurrentFilter"]"
               class="page-link ">
                Last
            </a>
        </li>
    </ul>
</div>

<div id="container" style="margin-left: 20px">
    <p></p>
    <p></p>
    <div class="pagination" style="margin-left: 400px">
        Page @(Model.PageIndex < Model.TotalPages ? Model.PageIndex : 1) of @Model.TotalPages

    </div>
</div>

<br />
<p></p>
@section Scripts {
    <partial name="_ValidationScriptsPartial" />
}
